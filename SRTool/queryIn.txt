(set-logic QF_BV)
(declare-fun main() Bool)
(define-fun tobv32 ((p Bool)) (_ BitVec 32) (ite p (_ bv1 32) (_ bv0 32)))
(define-fun tobool ((p (_ BitVec 32))) (Bool) (not (= p (_ bv0 32))))
(declare-fun $PRED2$1 () (_ BitVec 32))
(declare-fun $PRED1$1 () (_ BitVec 32))
(declare-fun i$3 () (_ BitVec 32))
(declare-fun $PRED3$1 () (_ BitVec 32))
(declare-fun i$2 () (_ BitVec 32))
(declare-fun $PRED0$1 () (_ BitVec 32))
(declare-fun i$1 () (_ BitVec 32))
(declare-fun $PRED4$1 () (_ BitVec 32))
(declare-fun i$0 () (_ BitVec 32))
(declare-fun prop0 () (Bool))
(declare-fun prop1 () (Bool))
(declare-fun prop2 () (Bool))
(declare-fun prop3 () (Bool))
(declare-fun prop4 () (Bool))
(declare-fun prop5 () (Bool))
(declare-fun prop6 () (Bool))
(declare-fun prop7 () (Bool))
(assert (tobool (tobv32 (= i$1 (ite (tobool (tobv32 (and  (tobool #x00000001) (tobool #x00000001)))) #x00000000 i$0 )))))
(assert (tobool (tobv32 (= $PRED0$1 (tobv32 (and  (tobool #x00000001) (tobool (tobv32 (bvslt i$1 #x00000002)))))))))
(assert (tobool (tobv32 (= $PRED1$1 (tobv32 (and  (tobool #x00000001) (tobool (tobv32 (not (tobool (tobv32 (bvslt i$1 #x00000002))))))))))))
(assert (tobool (tobv32 (= i$2 (ite (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED0$1)))) (bvadd i$1 #x00000001) i$1 )))))
(assert (tobool (tobv32 (= $PRED2$1 (tobv32 (and  (tobool $PRED0$1) (tobool (tobv32 (bvslt i$2 #x00000002)))))))))
(assert (tobool (tobv32 (= $PRED3$1 (tobv32 (and  (tobool $PRED0$1) (tobool (tobv32 (not (tobool (tobv32 (bvslt i$2 #x00000002))))))))))))
(assert (tobool (tobv32 (= i$3 (ite (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED2$1)))) (bvadd i$2 #x00000001) i$2 )))))
(assert (tobool (tobv32 (= $PRED4$1 (tobv32 (or  (tobool (tobv32 (not (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED2$1))))))) (tobool (tobv32 (not (tobool (tobv32 (bvslt i$3 #x00000002))))))))))))
(assert (= prop0 (tobool (tobv32 (or  (tobool (tobv32 (not (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED0$1))))))) (tobool (tobv32 (bvsge i$1 #x00000000))))))))
(assert (= prop1 (tobool (tobv32 (or  (tobool (tobv32 (not (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED0$1))))))) (tobool (tobv32 (bvsle i$1 #x00000002))))))))
(assert (= prop2 (tobool (tobv32 (or  (tobool (tobv32 (not (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED2$1))))))) (tobool (tobv32 (bvsge i$2 #x00000000))))))))
(assert (= prop3 (tobool (tobv32 (or  (tobool (tobv32 (not (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED2$1))))))) (tobool (tobv32 (bvsle i$2 #x00000002))))))))
(assert (= prop4 (tobool (tobv32 (or  (tobool (tobv32 (not (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED2$1))))))) (tobool (tobv32 (bvsge i$3 #x00000000))))))))
(assert (= prop5 (tobool (tobv32 (or  (tobool (tobv32 (not (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED2$1))))))) (tobool (tobv32 (bvsle i$3 #x00000002))))))))
(assert (= prop6 (tobool (tobv32 (or  (tobool (tobv32 (not (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED2$1))))))) (tobool (tobv32 (not (tobool (tobv32 (bvslt i$3 #x00000002)))))))))))
(assert (= prop7 (tobool (tobv32 (or  (tobool (tobv32 (not (tobool (tobv32 (and  (tobool (tobv32 (and  (tobool #x00000001) (tobool $PRED4$1)))) (tobool #x00000001))))))) (tobool (tobv32 (= i$3 #x00000002))))))))
(assert (not (and prop0 (and prop1 (and prop2 (and prop3 (and prop4 (and prop5 (and prop6 prop7)))))))) )(check-sat)
(get-value (prop0 prop1 prop2 prop3 prop4 prop5 prop6 prop7 ))
